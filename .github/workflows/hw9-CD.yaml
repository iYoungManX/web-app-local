# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support


name: HW-9 CD
on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  hw9-CD:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      AWS_EC2_METADATA_DISABLED: true
      AWS_DEFAULT_REGION: ${{ secrets.REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      REGION: ${{ secrets.REGION }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run:
          mvn package

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "1.8.3" # or `latest`

      - name: Run packer build
        run: cd packerAMI && packer build pack.pkr.hcl

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile dev
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile dev
          aws configure set default.region $AWS_DEFAULT_REGION --profile dev
          aws configure set default.output json --profile dev

          aws configure set aws_access_key_id ${{ secrets.DEMO_AWS_ACCESS_KEY_ID }} --profile demo
          aws configure set aws_secret_access_key ${{ secrets.DEMO_AWS_SECRET_ACCESS_KEY }} --profile demo
          aws configure set default.region $AWS_DEFAULT_REGION --profile demo
          aws configure set default.output json --profile demo

      - name: Create Launch Template Version.
        id: create-launch-template
        run: |
          IMAGE_ID=$(aws --profile dev ec2 describe-images --owners self \
          --filters Name=is-public,Values=false Name=state,Values=available \
          --query 'reverse(sort_by(Images, &CreationDate))[:1].ImageId' \
          --output text)

          LAUNCH_TEMPLATE_ID=$(aws --profile demo ec2 describe-launch-templates --query "LaunchTemplates[?LaunchTemplateName=='launch_config'].LaunchTemplateId" --output text)

          aws --profile demo ec2 create-launch-template-version --launch-template-id ${LAUNCH_TEMPLATE_ID} --launch-template-data '{"ImageId":"'${IMAGE_ID}'", "InstanceType":"t2.micro"}'

          echo "::set-output name=IMAGE_ID::${IMAGE_ID}"
          echo "::set-output name=LAUNCH_TEMPLATE_ID::${LAUNCH_TEMPLATE_ID}"

      - name: Update Auto Scaling Group
        run: |
          aws --profile demo autoscaling update-auto-scaling-group \
          --auto-scaling-group-name asg \
          --launch-template LaunchTemplateId=${{ steps.create-launch-template.outputs.LAUNCH_TEMPLATE_ID }},Version='$Latest' \
          --min-size 1 \
          --max-size 3 \
          --desired-capacity 1

      - name: Refresh Auto Scaling Group Instances
        run: |
          aws --profile demo autoscaling start-instance-refresh \
          --auto-scaling-group-name asg


