# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support


name: HW-4 CD
on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  build-image:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DEMO_ACCOUNT_ID: ${{ secrets.DEMO_ACCOUNT_ID }}
      DEV_ACCOUNT_ID: ${{ secrets.DEV_ACCOUNT_ID }}
      TF_VAR_aws_access_key: ${{ secrets.TF_VAR_aws_access_key}}
      TF_VAR_aws_secret_access_key: ${{ secrets.TF_VAR_aws_secret_access_key}}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run:
          mvn package

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "1.8.3" # or `latest`
      - name: check environment variables
        run: echo $DEV_ACCOUNT_ID

      - name: Run packer build
        run: cd packer && packer build pack.json > ../python/packer && cat ../python/packer


      - name: Set up Python
        uses: actions/setup-python@v2
        with:
            python-version: 3.8

      - name: Parse the AMI_ID with python
        run: cd python && python parseAMI.py >> $GITHUB_ENV

      - name: Check if AMI_ID is get from the environment variable
        run: echo ${{env.TF_VAR_ami_id}}

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Apply
        env:
          TF_VAR_ami_id: ${{ env.TF_VAR_ami_id}}
        run: cd aws-infra && terraform init && terraform apply -auto-approve







